#!/usr/bin/make -f
#
# Build Debian package using https://github.com/spotify/dh-virtualenv
#
# Note that this only works after applying
#   https://github.com/spotify/dh-virtualenv/pull/43
# (at least with some versions of virtualenv)

# The below targets create a clean copy of the workdir via
# using "sdist", else "pip" goes haywire when installing from
# sourcedir ".", because that includes the debian build stage,
# and a recursive explosion ensues when symlinks are followed.

export DH_VIRTUALENV_INSTALL_ROOT=/opt/venvs


# Packages to install before the main project
PREINSTALL=--preinstall "setuptools>=17.1" --preinstall "wheel" \
    --preinstall pytest --preinstall webtest
# --preinstall 'requests[security]' # for Python before 2.7.9, e.g. on Ubuntu Trusty

# Version of "devpi" meta package
DEVPI_SERVER_VERSION=4.9.0
DEVPI_SERVER_PYPI="https://pypi.org"
DEVPI_URL=$(shell curl -sL $(DEVPI_SERVER_PYPI)/simple/devpi-server/ \
    | grep devpi-server-$(DEVPI_SERVER_VERSION).tar.gz | cut -f2 -d'"' | cut -f1 -d\# | sed -re 's~^[./]+~~')


PACKAGE=$(shell dh_listpackages)
VERSION=$(shell parsechangelog | grep ^Version: | sed -re 's/[^0-9]+([^-]+).*/\1/')
DH_VENV_ARGS=--setuptools --upgrade-pip --python /usr/bin/python3 $(PYPI_URL) $(PREINSTALL) #-v
DH_VENV_DIR=debian/$(PACKAGE)$(DH_VIRTUALENV_INSTALL_ROOT)/$(PACKAGE)


clean:
	test ! -d debian/sdist || rm -rf debian/sdist
	-rm debian/*.tar.gz
	dh $@ $(DH_VENV_ARGS)

build-arch:
	# TODO: This should be an orig-tarball
	cd debian && curl -sLOkS $(DEVPI_URL)
	mkdir -p debian/sdist
	tar -xz -C debian/sdist --strip-components=1 --exclude '*.egg-info' -f debian/*.tar.gz
	cp requirements.txt debian/sdist/requirements.txt
	dh $@ --with python-virtualenv --sourcedir debian/sdist

%:
	dh $@ --with python-virtualenv --sourcedir debian/sdist

